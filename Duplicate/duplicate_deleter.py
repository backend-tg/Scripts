import hashlib  # Импортируем библиотеку для работы с хеш-суммами
import os  # Импортируем библиотеку для работы с операциями файловой системы

# Функция для вычисления хеша файла


def hashFile(filename):
    BLOCKSIZE = 65536  # Размер блока для чтения файла. Это позволяет загружать файл кусками
    hasher = hashlib.md5()  # Используем алгоритм MD5 для вычисления хеш-суммы
    with open(filename, 'rb') as file:  # Открываем файл в бинарном режиме для чтения
        buf = file.read(BLOCKSIZE)  # Читаем первые 64KB файла
        while len(buf) > 0:  # Пока не достигнут конец файла
            hasher.update(buf)  # Обновляем хеш с данным куском данных
            buf = file.read(BLOCKSIZE)  # Читаем следующий кусок
    return hasher.hexdigest()  # Возвращаем хеш-сумму файла в виде строки


# Главная часть программы
if __name__ == "__main__":
    # Путь к папке, где будут искаться и удаляться дубликаты (укажите путь к нужной папке)
    directory = input("Введите путь к папке для поиска дубликатов: ")

    # Проверяем, существует ли указанная директория
    if not os.path.isdir(directory):
        print("Указанная директория не существует.")
        exit()

    hashMap = {}  # Словарь для хранения хеш-сумм и соответствующих им файлов
    deletedFiles = []  # Список для хранения имен файлов, которые будут удалены

    # Получаем все файлы в указанной директории
    filelist = [f for f in os.listdir(
        directory) if os.path.isfile(os.path.join(directory, f))]

    # Проходим по каждому файлу в директории
    for f in filelist:
        file_path = os.path.join(directory, f)  # Полный путь к файлу
        key = hashFile(file_path)  # Вычисляем хеш для текущего файла
        if key in hashMap.keys():  # Проверяем, встречался ли этот хеш ранее
            # Если да, добавляем файл в список удаленных
            deletedFiles.append(f)
            os.remove(file_path)  # Удаляем файл-дубликат
        else:
            hashMap[key] = f  # Если файл уникален, добавляем его хеш в словарь

    # Если дубликаты были найдены и удалены, выводим их список
    if len(deletedFiles) != 0:
        print('Удаленные файлы:')
        for i in deletedFiles:
            print(i)  # Выводим имена удаленных файлов
    else:
        # Если дубликатов нет, выводим сообщение
        print('Дубликаты не найдены.')
